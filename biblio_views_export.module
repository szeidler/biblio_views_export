<?php

/**
 * @file
 * Biblio views export module for a views based biblio mass export biblio.
 */

/**
 * Implements hook_views_api().
 */
function biblio_views_export_views_api() {
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'biblio_views_export') . '/views',
  );
}

/**
 * Create biblio views export form.
 *
 * Form with nids in a hidden element and a submit button for every available
 *   export format
 *
 * @param array $form
 *   Current form.
 * @param array $form_state
 *   Current form state.
 *
 * @return array
 *   Modified form.
 */
function biblio_views_export_form(array $form, array &$form_state) {
  $form = array();
  $export_links = module_invoke_all('biblio_export_link');
  if (!empty($export_links)) {
    if (is_array($form_state['build_info']['args'][0])) {
      $nids = $form_state['build_info']['args'][0];
      $form['intro'] = array(
        '#type' => 'markup',
        '#markup' => t('Export @count results', array('@count' => count($nids))) . ': ',
      );
      $form['nids'] = array(
        '#type' => 'hidden',
        '#value' => implode(',', $nids),
      );
      foreach ($export_links as $key => $link) {
        $form['submit_' . $key] = array(
          '#name' => $key,
          '#type' => 'submit',
          '#value' => $link['title'],
          '#attributes' => array('title' => $link['attributes']['title']),
        );
      }
    }
  }
  return $form;
}

/**
 * Extract passed nids and format and invoke biblio_export function.
 *
 * @param array $form
 *   Current form.
 * @param array $form_state
 *   Current form state after form submission and validation.
 */
function biblio_views_export_form_submit(array $form, array &$form_state) {
  $nids = explode(',', $form_state['values']['nids']);
  $format = str_replace('submit', '', $form_state['clicked_button']['#name']);
  module_invoke($format, 'biblio_export', $nids);
  exit();
}
